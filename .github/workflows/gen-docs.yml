# Copyright 2022 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Generate documentation for apigeecli
name: apigeecli Github Pages Pipeline
permissions: read-all
on:
  push:
  # Publish semver tags as releases.
    tags:
      - v[0-9].[0-9]+.[0-9]
  workflow_dispatch:

jobs:
  publish-gh-pages:
    name: Publish apigeecli Documentation
    runs-on: ubuntu-latest
    permissions:
      contents: write # needed to create PR
      packages: write
      id-token: write
      attestations: write
      pull-requests: write
      repository-projects: write

    steps:
      - name: Checkout Code
        uses: actions/checkout@1e31de5234b9f8995739874a8ce0492dc87873e2 #v4
      - name: Push GH Pages
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          SHORT_SHA=$(git rev-parse --short $GITHUB_SHA)
          git config pull.rebase false
          git config --global user.name "$(git log -n 1 --pretty=format:%an)"
          git config --global user.email "$(git log -n 1 --pretty=format:%ae)"

          git fetch origin main
          git fetch origin gh_pages
          git checkout gh_pages
          git merge origin/main --allow-unrelated-histories

          GOBIN=/tmp/ go install github.com/google/go-licenses@v1.0.0
          /tmp/go-licenses csv ./cmd/apigeecli > third-party-licenses.txt || echo "Ignore warnings"
          /tmp/go-licenses save ./cmd/apigeecli --save_path=third-party --force || echo "Ignore warnings"

          git add third-party third-party-licenses.txt
          git commit -m "generate licenses - $SHORT_SHA" || echo "No Changes in license"

          go run docs/docs.go

          git add --all
          git commit -m "Update GH Pages - $SHORT_SHA" || echo "No Changes in docs"
          git push origin gh_pages
          gh pr create --title "Update Documentation" --body "update docs to ${GITHUB_SHA}" --base main --head gh_pages
